#!/bin/bash

set -euo pipefail

cd /var/vcap/jobs/print-docker-component-version/packages

CTOP_VERSION="$(./ctop/bin/ctop -v)"

pushd docker/bin > /dev/null
  CONTAINERD_VERSION="$(./containerd -v)"
  # containerd-shim doesn't have a version command and the code shows the same version as containerd above
  # containerd-shim --version
  CTR_VERSION="$(./ctr -v)"
  DOCKER_VERSION="$(./docker -v)"
  DOCKER_D_VERSION="$(./dockerd -v)"
  DOCKER_INIT_VERSION="$(./docker-init --version)"
  # could not find a way to view the version, but this is likely to be the same as docker
  # docker-proxy --version
  RUNC_VERSION="$(./runc -v | head -n 1)"
popd > /dev/null

# this comes from src/go-src/docker-registry-certs in this repo, since it is our code we don't need to print the version
# ./docker-registry-certs/bin/generate_certs

# TODO:
#- flannel
#- golang-1.12-linux
#- swarm

# $1 = package name
# $2 = package version
# $3 = license
# $4 = tgz name
# $5 = url
# ex. print_osm_format ctop "$CTOP_VERSION" MIT name-of-ctop.tgz TBD
print_osm_format() {
  cat <<EOF
other:$1:$2:
  name: $1
  version: '$2'
  repository: Other
  license: $3
  other-distribution: /tmp/osl/$4
  url: $5
EOF
}


print_osm_format ctop "$CTOP_VERSION" "$(cat ctop/LICENSE.txt)" "$(basename "$(cat ctop/URL.txt)")" "$(cat ctop/URL.txt)"
print_osm_format containerd "$CONTAINERD_VERSION" LICENSE path-to-containerd.tgz URL
print_osm_format ctr "$CTR_VERSION" LICENSE path-to-ctr.tgz URL
print_osm_format docker "$DOCKER_VERSION" LICENSE path-to-docker.tgz URL
print_osm_format dockerd "$DOCKER_D_VERSION" LICENSE path-to-dockerd.tgz URL
print_osm_format docker-init "$DOCKER_INIT_VERSION" LICENSE path-to-docker-init.tgz URL
print_osm_format runc "$RUNC_VERSION" LICENSE path-to-runc.tgz URL
